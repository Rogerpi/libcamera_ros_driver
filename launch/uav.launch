<launch>

  <!-- defines name of the namespace -->
  <arg name="UAV_NAME" default="$(optenv UAV_NAME uav1)" />

  <arg name="frame_id" default="libcamera_frame"/>
  <arg name="calib_url" default="file://$(find libcamera_ros_driver)/config/calib/libcamera.yaml"/>

  <arg name="camera_name" default="front"/>

  <!-- config files -->
  <arg name="config" default="$(find libcamera_ros_driver)/config/default.yaml" />
  <arg name="custom_config" default="$(optenv CUSTOM_CONFIG)" />

  <!-- will it run as standalone nodelet or using a nodelet manager? -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="$(arg UAV_NAME)_camera_$(arg camera_name)_manager" />

  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <env name="LIBPISP_BE_CONFIG_FILE" value="$(optenv LIBPISP_BE_CONFIG_FILE /opt/ros/noetic/share/libpisp/backend_default_config.json)" />
  <env name="LIBCAMERA_IPA_MODULE_PATH" value="$(optenv LIBCAMERA_IPA_MODULE_PATH /opt/ros/noetic/lib/libcamera/)" />
  <env name="LIBCAMERA_IPA_CONFIG_PATH" value="$(optenv LIBCAMERA_IPA_CONFIG_PATH /opt/ros/noetic/share/libcamera/ipa)" />

  <group ns="$(arg UAV_NAME)">

    <node unless="$(arg standalone)" pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen">
      <param name="num_worker_threads" value="8" />
    </node>

    <node pkg="nodelet" type="nodelet" name="camera_$(arg camera_name)" args="$(arg nodelet) libcamera_ros_driver/LibcameraRosDriver $(arg nodelet_manager)" output="screen">

      <!-- Load the default param files -->
      <rosparam command="load" file="$(arg config)" />
      <rosparam command="load" file="$(arg config)" />

      <param if="$(eval arg('custom_config') == '')" name="custom_config" value="" />
      <rosparam if="$(eval not arg('custom_config') == '' and arg('custom_config')[0] == '/')" command="load" file="$(arg custom_config)" />
      <rosparam if="$(eval not arg('custom_config') == '' and not arg('custom_config')[0] == '/')" command="load" file="$(env PWD)/$(arg custom_config)" />

      <param name="frame_id" type="string" value="$(arg frame_id)"/>
      <param name="calib_url" type="string" value="$(arg calib_url)"/>

      <!-- Disable publishing of specific image transport topics -->
      <rosparam param="image_raw/disable_pub_plugins">
      - 'image_transport/compressedDepth'
      - 'image_transport/theora'
      - 'image_transport/h264'
      </rosparam>

      <!-- Publishers -->
      <remap from="~image_raw" to="~image_raw" />
      <remap from="~camera_info" to="~camera_info" />

    </node>

  </group>

</launch>
