<launch>

  <!-- defines name of the namespace -->
  <arg name="robot_name" default="$(optenv ROBOT_NAME girona500)" />
  <arg name="manipulator_name" default="$(optenv MANIPULATOR_NAME bravo)" />
  <!-- config files -->
  <arg name="config" default="$(find libcamera_ros_driver)/config/$(optenv IMAGE_QUALITY lq).yaml" />

  <arg name="camera_name" default="gripper" />
  <arg name="frame_id" default="libcamera_frame" />
  <arg name="calib_url"
    default="file://$(find libcamera_ros_driver)/config/calib/$(optenv IMAGE_QUALITY lq)_calibration.yaml" />

  <arg name="nodelet_manager" default="$(arg camera_name)_nodelet_manager" />

  <arg name="respawn" default="true" />
  <arg if="$(arg respawn)" name="bond" value="" />
  <arg unless="$(arg respawn)" name="bond" value="--no-bond" />

  <arg name="gripper_ns" default="$(arg robot_name)/$(arg manipulator_name)" />

  <group ns="$(arg gripper_ns)">
    <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" required="true"
      output="screen">
      <param name="num_worker_threads" value="8" />
    </node>

    <!-- Camera Nodelet -->
    <node pkg="nodelet" type="nodelet" name="$(arg camera_name)"
      args="load libcamera_ros_driver/LibcameraRosDriver /$(arg gripper_ns)/$(arg nodelet_manager) $(arg bond)"
      respawn="$(arg respawn)" output="screen">

      <!-- Load the default param files -->
      <rosparam command="load" file="$(arg config)" />

      <param name="frame_id" type="string" value="$(arg frame_id)" />
      <param name="calib_url" type="string" value="$(arg calib_url)" />

      <!-- Publishers -->
      <remap from="~image_raw" to="~image_raw" />
      <remap from="~camera_info" to="~camera_info" />
    </node>

    <!-- Rectify Color Nodelet -->
    <group ns="$(arg camera_name)">
      <node pkg="nodelet" type="nodelet" name="rectify_color"
        args="load image_proc/rectify /$(arg gripper_ns)/$(arg nodelet_manager) $(arg bond)"
        respawn="$(arg respawn)">
        <remap from="image_mono" to="image_raw" />
      </node>
    </group>

    <!-- Disable plugins -->
    <rosparam param="$(arg camera_name)/image_raw/disable_pub_plugins">
      - 'image_transport/compressedDepth'
      - 'image_transport/theora'
    </rosparam>
    <rosparam param="$(arg camera_name)/image_rect/disable_pub_plugins">
      - 'image_transport/compressedDepth'
      - 'image_transport/theora'
    </rosparam>

  </group>

  <!-- run roscore_supervisor node and stop launch if it dies-->
  <node name="roscore_supervisor" pkg="libcamera_ros_driver" type="roscore_supervisor.py"
    required="true" output="screen" />

</launch>