<launch>

  <!-- defines name of the namespace -->
  <arg name="robot_name" default="$(optenv ROBOT_NAME girona500)" />
  <arg name="manipulator_name" default="$(optenv MANIPULATOR_NAME bravo)" />
  <!-- config files -->
  <arg name="config" default="$(find libcamera_ros_driver)/config/$(optenv IMAGE_QUALITY lq).yaml" />

  <arg name="camera_name" default="gripper" />
  <arg name="frame_id" default="libcamera_frame" />
  <arg name="calib_url" default="file://$(find libcamera_ros_driver)/config/calib/libcamera.yaml" />


  <!-- will it run as standalone nodelet or using a nodelet manager? -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="camera_$(arg camera_name)_manager" />

  <arg unless="$(arg standalone)" name="nodelet" value="load" />
  <arg if="$(arg standalone)" name="nodelet" value="standalone" />
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)" />
  <arg if="$(arg standalone)" name="nodelet_manager" value="" />

  <group ns="$(arg robot_name)/$(arg manipulator_name)">

    <node unless="$(arg standalone)" pkg="nodelet" type="nodelet" name="$(arg manager)"
      args="manager" output="screen">
      <param name="num_worker_threads" value="8" />
    </node>

    <node pkg="nodelet" type="nodelet" name="camera_$(arg camera_name)"
      args="$(arg nodelet) libcamera_ros_driver/LibcameraRosDriver $(arg nodelet_manager)"
      respawn="true" output="screen">

      <!-- Load the default param files -->
      <rosparam command="load" file="$(arg config)" />

      <param name="frame_id" type="string" value="$(arg frame_id)" />
      <param name="calib_url" type="string" value="$(arg calib_url)" />

      <!-- Publishers -->
      <remap from="~image_raw" to="~image_raw" />
      <remap from="~camera_info" to="~camera_info" />

    </node>

  </group>

  <!-- run roscore_supervisor node and stop launch if it dies-->
  <node name="roscore_supervisor" pkg="libcamera_ros_driver" type="roscore_supervisor.py" required="true" output="screen" />

</launch>